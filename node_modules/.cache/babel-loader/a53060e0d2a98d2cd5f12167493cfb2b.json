{"ast":null,"code":"import _classCallCheck from \"/Users/lixiangyin/Documents/Development/Resume/Around/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lixiangyin/Documents/Development/Resume/Around/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lixiangyin/Documents/Development/Resume/Around/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lixiangyin/Documents/Development/Resume/Around/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lixiangyin/Documents/Development/Resume/Around/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lixiangyin/Documents/Development/Resume/Around/src/components/AroundMarker.js\";\nimport React from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport blueMarkerUrl from \"../assets/images/blue-marker.svg\";\nexport var AroundMarker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AroundMarker, _React$Component);\n\n  function AroundMarker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AroundMarker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AroundMarker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.onToggleOpen = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AroundMarker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          location = _this$props$post.location,\n          url = _this$props$post.url,\n          user = _this$props$post.user,\n          message = _this$props$post.message,\n          type = _this$props$post.type;\n      var isImagePost = type === 'image';\n      var icon = isImagePost ? undefined : {\n        url: blueMarkerUrl,\n        scaledSize: new window.google.maps.Size(26, 41)\n      };\n      return React.createElement(Marker, {\n        position: {\n          lat: location.lat,\n          lng: location.lon\n        },\n        onMouseOver: isImagePost ? this.onToggleOpen : undefined,\n        onMouseOut: isImagePost ? this.onToggleOpen : undefined,\n        onClick: isImagePost ? undefined : this.onToggleOpen,\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.isOpen ? React.createElement(InfoWindow, {\n        onCloseClick: this.onToggleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, isImagePost ? React.createElement(\"img\", {\n        src: url,\n        alt: message,\n        className: \"around-marker-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }) : React.createElement(\"video\", {\n        src: url,\n        className: \"around-marker-video\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"\".concat(user, \": \").concat(message)))) : null);\n    }\n  }]);\n\n  return AroundMarker;\n}(React.Component);","map":{"version":3,"sources":["/Users/lixiangyin/Documents/Development/Resume/Around/src/components/AroundMarker.js"],"names":["React","Marker","InfoWindow","AroundMarker","state","isOpen","onToggleOpen","setState","prevState","props","post","location","url","user","message","type","isImagePost","icon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","lat","lng","lon","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,UAFJ,QAGO,mBAHP;;AAMA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,MAAM,EAAE;AADJ,KADZ;;AAAA,UAKIC,YALJ,GAKmB,YAAM;AACjB,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AACzB,eAAO;AACHH,UAAAA,MAAM,EAAE,CAACG,SAAS,CAACH;AADhB,SAAP;AAGH,OAJD;AAKH,KAXL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAaa;AAAA,6BAC0C,KAAKI,KAAL,CAAWC,IADrD;AAAA,UACGC,QADH,oBACGA,QADH;AAAA,UACaC,GADb,oBACaA,GADb;AAAA,UACkBC,IADlB,oBACkBA,IADlB;AAAA,UACwBC,OADxB,oBACwBA,OADxB;AAAA,UACiCC,IADjC,oBACiCA,IADjC;AAEL,UAAMC,WAAW,GAAGD,IAAI,KAAK,OAA7B;AACA,UAAME,IAAI,GAAGD,WAAW,GAAGE,SAAH,GAAe;AACnCN,QAAAA,GAAG,EAAEO,aAD8B;AAEnCC,QAAAA,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;AAFuB,OAAvC;AAIA,aACI,oBAAC,MAAD;AACI,QAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEd,QAAQ,CAACc,GAAhB;AAAqBC,UAAAA,GAAG,EAAEf,QAAQ,CAACgB;AAAnC,SADd;AAEI,QAAA,WAAW,EAAEX,WAAW,GAAE,KAAKV,YAAP,GAAsBY,SAFlD;AAGI,QAAA,UAAU,EAAEF,WAAW,GAAE,KAAKV,YAAP,GAAsBY,SAHjD;AAII,QAAA,OAAO,EAAEF,WAAW,GAAGE,SAAH,GAAe,KAAKZ,YAJ5C;AAKI,QAAA,IAAI,EAAEW,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOK,KAAKb,KAAL,CAAWC,MAAX,GAAqB,oBAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQU,WAAW,GACP;AAAK,QAAA,GAAG,EAAEJ,GAAV;AAAe,QAAA,GAAG,EAAEE,OAApB;AAA6B,QAAA,SAAS,EAAC,qBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,GAGP;AAAO,QAAA,GAAG,EAAEF,GAAZ;AAAiB,QAAA,SAAS,EAAC,qBAA3B;AAAiD,QAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALZ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAOC,IAAP,eAAgBC,OAAhB,EAPJ,CADkB,CAArB,GAUgB,IAjBrB,CADJ;AAqBH;AAzCL;;AAAA;AAAA,EAAkCd,KAAK,CAAC4B,SAAxC","sourcesContent":["import React from 'react';\nimport {\n    Marker,\n    InfoWindow,\n} from 'react-google-maps';\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\n\nexport class AroundMarker extends React.Component {\n    state = {\n        isOpen: false,\n    }\n\n    onToggleOpen = () => {\n        this.setState((prevState) => {\n            return {\n                isOpen: !prevState.isOpen,\n            }\n        });\n    }\n\n    render() {\n        const { location, url, user, message, type } = this.props.post;\n        const isImagePost = type === 'image';\n        const icon = isImagePost ? undefined : {\n            url: blueMarkerUrl,\n            scaledSize: new window.google.maps.Size(26, 41),\n        }\n        return (\n            <Marker\n                position={{ lat: location.lat, lng: location.lon }}\n                onMouseOver={isImagePost? this.onToggleOpen : undefined}\n                onMouseOut={isImagePost? this.onToggleOpen : undefined}\n                onClick={isImagePost ? undefined : this.onToggleOpen}\n                icon={icon}\n            >\n                {this.state.isOpen ? (<InfoWindow onCloseClick={this.onToggleOpen}>\n                    <div>\n                        {\n                            isImagePost ?\n                                <img src={url} alt={message} className=\"around-marker-image\"/>\n                                :\n                                <video src={url} className=\"around-marker-video\" controls/>\n                        }\n                        <p>{`${user}: ${message}`}</p>\n                    </div>\n                </InfoWindow>) : null}\n            </Marker>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}