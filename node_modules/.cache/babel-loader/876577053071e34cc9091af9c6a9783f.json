{"ast":null,"code":"import _classCallCheck from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lixiangyin/around-web/src/components/CreatePostButton.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport { Modal, Button, message } from 'antd';\nimport { WrappedCreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_PREFIX, TOKEN_KEY, POS_KEY, LOC_SHAKE } from '../constants';\nexport var CreatePostButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePostButton, _React$Component);\n\n  function CreatePostButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePostButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePostButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function () {\n      // collect values\n      _this.form.validateFields(function (err, values) {\n        if (!err) {\n          // send request\n          var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n              lat = _JSON$parse.lat,\n              lon = _JSON$parse.lon;\n\n          var formData = new FormData();\n          formData.set('lat', lat + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n          formData.set('lon', lon + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n          formData.set('message', values.message);\n          formData.set('image', values.image[0].originFileObj);\n\n          _this.setState({\n            confirmLoading: true\n          });\n\n          $.ajax({\n            url: \"\".concat(API_ROOT, \"/post\"),\n            method: 'POST',\n            data: formData,\n            headers: {\n              Authorization: \"\".concat(AUTH_PREFIX, \" \").concat(localStorage.getItem(TOKEN_KEY))\n            },\n            processData: false,\n            contentType: false,\n            dataType: 'text'\n          }).then(function () {\n            message.success('Create post succeed!');\n\n            _this.form.resetFields();\n\n            _this.setState({\n              visible: false,\n              confirmLoading: false\n            });\n\n            _this.props.loadNearbyPost();\n          }, function () {\n            message.error('Create post failed.');\n\n            _this.setState({\n              confirmLoading: false\n            });\n          }).catch(function (e) {\n            console.log(e);\n          });\n        }\n      });\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.saveFormRef = function (formIntance) {\n      _this.form = formIntance;\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePostButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Create New Post\"), React.createElement(Modal, {\n        title: \"Create New Post\",\n        visible: visible,\n        onOk: this.handleOk,\n        okText: \"Create\",\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(WrappedCreatePostForm, {\n        ref: this.saveFormRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreatePostButton;\n}(React.Component);","map":{"version":3,"sources":["/Users/lixiangyin/around-web/src/components/CreatePostButton.js"],"names":["React","$","Modal","Button","message","WrappedCreatePostForm","API_ROOT","AUTH_PREFIX","TOKEN_KEY","POS_KEY","LOC_SHAKE","CreatePostButton","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","form","validateFields","err","values","JSON","parse","localStorage","getItem","lat","lon","formData","FormData","set","Math","random","image","originFileObj","ajax","url","method","data","headers","Authorization","processData","contentType","dataType","then","success","resetFields","props","loadNearbyPost","error","catch","e","console","log","handleCancel","saveFormRef","formIntance","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport { Modal, Button, message } from 'antd';\nimport { WrappedCreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_PREFIX, TOKEN_KEY, POS_KEY, LOC_SHAKE } from '../constants';\n\nexport class CreatePostButton extends React.Component {\n    state = {\n        ModalText: 'Content of the modal',\n        visible: false,\n        confirmLoading: false,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = () => {\n        // collect values\n        this.form.validateFields((err, values) => {\n            if(!err) {\n                // send request\n                const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n                const formData = new FormData();\n                formData.set('lat', lat + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n                formData.set('lon', lon + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n                this.setState({ confirmLoading: true });\n                $.ajax({\n                    url: `${API_ROOT}/post`,\n                    method: 'POST',\n                    data: formData,\n                    headers: {\n                        Authorization: `${AUTH_PREFIX} ${localStorage.getItem(TOKEN_KEY)}`,\n                    },\n                    processData: false,\n                    contentType: false,\n                    dataType: 'text',\n                }).then(() => {\n                    message.success('Create post succeed!');\n                    this.form.resetFields();\n                    this.setState({ visible: false, confirmLoading: false });\n                    this.props.loadNearbyPost();\n                }, () => {\n                    message.error('Create post failed.');\n                    this.setState({ confirmLoading: false });\n                }).catch((e) => {\n                    console.log(e);\n                });\n            }\n        });\n    }\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    }\n\n    saveFormRef = (formIntance) => {\n        this.form = formIntance;\n    }\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>Create New Post</Button>\n                <Modal title=\"Create New Post\"\n                       visible={visible}\n                       onOk={this.handleOk}\n                       okText=\"Create\"\n                       confirmLoading={confirmLoading}\n                       onCancel={this.handleCancel}\n                >\n                    <WrappedCreatePostForm ref={this.saveFormRef}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}