{"ast":null,"code":"import _classCallCheck from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lixiangyin/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lixiangyin/around-web/src/components/AroundMap.js\";\nimport React from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap } from 'react-google-maps';\nimport { AroundMarker } from './AroundMarker';\nimport { POS_KEY } from '../constants';\n\nvar AroundMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AroundMap, _React$Component);\n\n  function AroundMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AroundMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AroundMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.reloadMarkers = function () {\n      var center = _this.map.getCenter();\n\n      var position = {\n        lat: center.lat(),\n        lon: center.lng()\n      };\n\n      var range = _this.getRange();\n\n      _this.props.loadNearbyPost(position, range);\n    };\n\n    _this.getRange = function () {\n      var google = window.google;\n\n      var center = _this.map.getCenter();\n\n      var bounds = _this.map.getBounds();\n\n      var range = 0;\n\n      if (center && bounds) {\n        var ne = bounds.getNorthEast();\n        var right = new google.maps.LatLng(center.lat(), ne.lng());\n        range = 0.001 * google.maps.geometry.spherical.computeDistanceBetween(center, right);\n      }\n\n      return range;\n    };\n\n    _this.saveMapRef = function (mapInstance) {\n      window.map = mapInstance;\n      _this.map = mapInstance;\n    };\n\n    return _this;\n  }\n\n  _createClass(AroundMap, [{\n    key: \"render\",\n    value: function render() {\n      var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _JSON$parse.lat,\n          lon = _JSON$parse.lon;\n\n      return React.createElement(GoogleMap, {\n        ref: this.saveMapRef,\n        defaultZoom: 11,\n        defaultCenter: {\n          lat: lat,\n          lng: lon\n        },\n        onDragEnd: this.reloadMarkers,\n        onZoomChanged: this.reloadMarkers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.posts.map(function (post) {\n        return React.createElement(AroundMarker, {\n          post: post,\n          key: post.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return AroundMap;\n}(React.Component);\n\nexport var WrappedAroundMap = withScriptjs(withGoogleMap(AroundMap));","map":{"version":3,"sources":["/Users/lixiangyin/around-web/src/components/AroundMap.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","AroundMarker","POS_KEY","AroundMap","reloadMarkers","center","map","getCenter","position","lat","lon","lng","range","getRange","props","loadNearbyPost","google","window","bounds","getBounds","ne","getNorthEast","right","maps","LatLng","geometry","spherical","computeDistanceBetween","saveMapRef","mapInstance","JSON","parse","localStorage","getItem","posts","post","url","Component","WrappedAroundMap"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,QAIO,mBAJP;AAKA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;;IAEMC,S;;;;;;;;;;;;;;;;;;UACFC,a,GAAgB,YAAM;AAClB,UAAMC,MAAM,GAAG,MAAKC,GAAL,CAASC,SAAT,EAAf;;AACA,UAAMC,QAAQ,GAAG;AAAEC,QAAAA,GAAG,EAAEJ,MAAM,CAACI,GAAP,EAAP;AAAqBC,QAAAA,GAAG,EAAEL,MAAM,CAACM,GAAP;AAA1B,OAAjB;;AACA,UAAMC,KAAK,GAAG,MAAKC,QAAL,EAAd;;AACA,YAAKC,KAAL,CAAWC,cAAX,CAA0BP,QAA1B,EAAoCI,KAApC;AACH,K;;UAEDC,Q,GAAW,YAAM;AACb,UAAMG,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AACA,UAAMX,MAAM,GAAG,MAAKC,GAAL,CAASC,SAAT,EAAf;;AACA,UAAMW,MAAM,GAAG,MAAKZ,GAAL,CAASa,SAAT,EAAf;;AACA,UAAIP,KAAK,GAAG,CAAZ;;AACA,UAAIP,MAAM,IAAIa,MAAd,EAAsB;AAClB,YAAME,EAAE,GAAGF,MAAM,CAACG,YAAP,EAAX;AACA,YAAMC,KAAK,GAAG,IAAIN,MAAM,CAACO,IAAP,CAAYC,MAAhB,CAAuBnB,MAAM,CAACI,GAAP,EAAvB,EAAqCW,EAAE,CAACT,GAAH,EAArC,CAAd;AACAC,QAAAA,KAAK,GAAG,QAAQI,MAAM,CAACO,IAAP,CAAYE,QAAZ,CAAqBC,SAArB,CAA+BC,sBAA/B,CAAsDtB,MAAtD,EAA8DiB,KAA9D,CAAhB;AACH;;AACD,aAAOV,KAAP;AACH,K;;UAEDgB,U,GAAa,UAACC,WAAD,EAAiB;AAC1BZ,MAAAA,MAAM,CAACX,GAAP,GAAauB,WAAb;AACA,YAAKvB,GAAL,GAAWuB,WAAX;AACH,K;;;;;;;6BAEQ;AAAA,wBACgBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB/B,OAArB,CAAX,CADhB;AAAA,UACGO,GADH,eACGA,GADH;AAAA,UACQC,GADR,eACQA,GADR;;AAEL,aACI,oBAAC,SAAD;AACI,QAAA,GAAG,EAAE,KAAKkB,UADd;AAEI,QAAA,WAAW,EAAE,EAFjB;AAGI,QAAA,aAAa,EAAE;AAAEnB,UAAAA,GAAG,EAAHA,GAAF;AAAOE,UAAAA,GAAG,EAAED;AAAZ,SAHnB;AAII,QAAA,SAAS,EAAE,KAAKN,aAJpB;AAKI,QAAA,aAAa,EAAE,KAAKA,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQQ,KAAKU,KAAL,CAAWoB,KAAX,CAAiB5B,GAAjB,CAAqB,UAAC6B,IAAD,EAAU;AAC3B,eAAO,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,IAApB;AAA0B,UAAA,GAAG,EAAEA,IAAI,CAACC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,CARR,CADJ;AAeH;;;;EA3CmBvC,KAAK,CAACwC,S;;AA8C9B,OAAO,IAAMC,gBAAgB,GAAGxC,YAAY,CAACC,aAAa,CAACI,SAAD,CAAd,CAArC","sourcesContent":["import React from 'react';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n} from 'react-google-maps';\nimport { AroundMarker } from './AroundMarker';\nimport { POS_KEY } from '../constants';\n\nclass AroundMap extends React.Component {\n    reloadMarkers = () => {\n        const center = this.map.getCenter();\n        const position = { lat: center.lat(), lon: center.lng() };\n        const range = this.getRange();\n        this.props.loadNearbyPost(position, range);\n    }\n\n    getRange = () => {\n        const google = window.google;\n        const center = this.map.getCenter();\n        const bounds = this.map.getBounds();\n        let range = 0;\n        if (center && bounds) {\n            const ne = bounds.getNorthEast();\n            const right = new google.maps.LatLng(center.lat(), ne.lng());\n            range = 0.001 * google.maps.geometry.spherical.computeDistanceBetween(center, right);\n        }\n        return range;\n    }\n\n    saveMapRef = (mapInstance) => {\n        window.map = mapInstance;\n        this.map = mapInstance;\n    }\n\n    render() {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        return(\n            <GoogleMap\n                ref={this.saveMapRef}\n                defaultZoom={11}\n                defaultCenter={{ lat, lng: lon }}\n                onDragEnd={this.reloadMarkers}\n                onZoomChanged={this.reloadMarkers}\n            >\n                {\n                    this.props.posts.map((post) => {\n                        return <AroundMarker post={post} key={post.url}/>\n                    })\n                }\n            </GoogleMap>\n        );\n    }\n}\n\nexport const WrappedAroundMap = withScriptjs(withGoogleMap(AroundMap));"]},"metadata":{},"sourceType":"module"}